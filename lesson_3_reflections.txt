When would you want to use a remote repository rather than keeping all your work local?
  Remote repositories allow you to share your code with others so you can collaborate on projects and get feedback.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
  Because you may be working on a different version than what is in the remote repository. You could be in the middle of making some changes and suddenly your local repository is updated. There could be a bug in a commit on the remote repository and you wouldn't want that pulled automatically.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

  A fork is when you copy another user's repository to your GitHub account and you'd use it when you want to modify someone else's code but can't/don't want to push it back to their repository. A clone is when you copy a repository from GitHub to your local machine and you'd want to do this so you can edit the code on your local machine instead of on GitHub. A branch is simply one path of commits.

 What is the benefit of having a copy of the last known state of the remote stored locally?

  If you are going offline it's helpful to have a copy so you can make edits and aren't forced to merge if you don't want to.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

  I could collaborate with file sharing options like Dropbox, or using a shared server. It would be easier to not have to execute all of the commands like adding files to the staging area, committing them, pushing/pulling ect. I could just save and let the person know it's been updated. However, this could get confusing very fast with lots of different versions of files. We would also have to go through the files manually to see which versions should be merged. It would be a lot harder to track changes overall.